{"version":3,"sources":["components/Cards.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Cards","email","name","id","className","alt","src","CardList","robots","cardcomponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredrobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZD,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,MAAMC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,GAC3B,OACC,sBAAKC,UAAY,qDAAjB,UACC,qBAAKC,IAAI,SAAQC,IAAG,+BAA2BH,EAA3B,mBAEpB,gCACC,+BAAKD,EAAL,OACA,4BAAID,WCIOM,EAXC,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACXC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACtC,OAAO,cAAC,EAAD,CAAeT,GAAIK,EAAOI,GAAGT,GAAID,KAAOM,EAAOI,GAAGV,KAAMD,MAAOO,EAAOI,GAAGX,OAA7DW,MAEpB,OACI,8BACIH,KCOMI,EAbG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAChC,OACC,qBAAKX,UAAU,MAAf,SACC,uBACAA,UAAU,mCACTY,KAAK,SACLC,YAAa,cACbC,SAAWH,OCAAI,EAPD,SAACC,GACd,OACC,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,MAAOC,OAAO,SAAtD,SACEJ,EAAMK,YCiBKC,G,wDAlBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CAACC,UAAW,GAFR,E,qDAKnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAU,CAACJ,UAAU,M,oBAI3B,WAIC,OAHIG,KAAKJ,MAAMC,SAGRG,KAAKX,MAAMK,a,GAfSQ,cCmFbC,E,kDAtEd,aAAc,IAAD,8BACZ,gBAkBFC,eAAgB,SAACC,GAChB,EAAKJ,SAAS,CAAClB,YAAYsB,EAAMC,OAAOC,SAlBvC,EAAKX,MAAO,CACVnB,OAAO,GACPM,YAAY,IAJF,E,qDAUd,WAAoB,IAAD,OAClByB,MAAM,8CAA8CC,MAAK,SAAAC,GACxD,OAAOA,EAASC,UAEhBF,MAAK,SAAAG,GAAK,OAAE,EAAKX,SAAS,CAACxB,OAAOmC,S,oBAepC,WACC,MAA6BZ,KAAKJ,MAA3BnB,EAAP,EAAOA,OAAOM,EAAd,EAAcA,YAER8B,EAAiBpC,EAAOqC,QAAO,SAAArC,GACpC,OAAOA,EAAON,KAAK4C,cAAcC,SAASjC,EAAYgC,kBAEvD,OAAoB,IAAhBtC,EAAOwC,OACH,0CAGL,sBAAK5C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcgB,KAAKI,iBAC/B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU3B,OAAQoC,e,GA7CNX,aCHHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAGDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d63c3f0d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Cards = ({email,name ,id})=> {\r\n\treturn(\r\n\t\t<div className = 'tc bg-light-blue dib br3 grow pa3 ma2 bw2 shadow-5'>\r\n\t\t\t<img alt='robots'src ={`https://robohash.org/${id}?size=200x200`} />\r\n\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name} </h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Cards;","import React from 'react';\r\nimport Cards from './Cards.js'\r\nconst CardList =({robots})=>{\r\n\tconst cardcomponent = robots.map((user,i)=>{\r\n\t\treturn <Cards key={i} id={robots[i].id} name ={robots[i].name} email={robots[i].email}/>\r\n})\r\n\treturn\t(\r\n\t\t\t\t <div>\r\n\t   \t\t\t\t{cardcomponent}\r\n  \t\t\t\t </div>\t\r\n\r\n\t\t\t)\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) =>{\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t type='search' \r\n\t\t\t placeholder ='find robots'\r\n\t\t\t onChange ={searchChange}/>\r\n\t\t\t \r\n\t\t</div>\r\n\r\n\t\t)\r\n}\r\nexport default SearchBox;","import React from 'react'\r\n\r\nconst Scroll =(props)=>{\r\n\treturn (\r\n\t\t<div style={{overflowY:'scroll', border:'1px', height:'500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Scroll;","import React,{Component} from 'react'\r\n\r\n\r\nclass ErrorBoundary extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {hasError : false}\r\n\t}\r\n\r\ncomponentDidCatch(error, info){\r\n\tthis.setState ({hasError :true} )\r\n\r\n}\r\n\r\nrender(){\r\n\tif (this.state.hasError){\r\n\t\t<h1> something went wrong </h1>\r\n\t}\r\n\treturn this.props.children\r\n}\r\n\r\n}\r\nexport default ErrorBoundary;\r\n","import React,{ Component} from 'react';\r\n\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll.js'\r\nimport './app.css'\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\n\r\n\r\n// const state =()=>{\r\n// \trobots:'robots'\r\n// \tsearchfield:''\r\n// }\r\n\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state= {\r\n\t\t\t\trobots:[],\r\n\t\t\t\tsearchfield:''\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\ncomponentDidMount(){\r\n\tfetch('https://jsonplaceholder.typicode.com/users').then(response=>{\r\n\t\treturn response.json();\r\n\t})\r\n\t.then(users=>this.setState({robots:users}));\r\n}\r\n\r\n\r\n\r\nonSearchChange =(event)=>{\r\n\tthis.setState({searchfield:event.target.value})\r\n\t\r\n\t// const filteredrobots = this.state.robots.filter(robots => {\r\n\t// \treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t// })\r\n\t// console.log(filteredrobots);\r\n}\r\n\r\n\r\nrender(){\r\n\tconst {robots,searchfield} = this.state\r\n\r\n\tconst filteredrobots = robots.filter(robots => {\r\n\t\treturn robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t})\r\n\tif (robots.length===0) {\r\n\t\treturn <h1>Loading </h1>\r\n\t}else{\r\n\t\t\treturn(\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1 className='f1'>ROBOFRIENDS</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CardList robots={filteredrobots}/>\t\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// const App = ()=> {\r\n// // \treturn(\r\n// \t<div className='tc'>\r\n// \t\t<h2>ROBOFRIENDS</h2>\r\n// \t\t<SearchBox />\r\n// \t\t<CardList robots={robots}/>\t\r\n\t\r\n// \t</div>\r\n// \t)\r\n\r\n// }\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\t\n \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}